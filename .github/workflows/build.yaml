name: "Build"

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  workflow_dispatch:
    branches:
      - master
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
      
jobs:
  build:
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    name: Build 
    runs-on: windows-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      DOTNET_GENERATE_ASPNET_CERTIFICATE: false
      DOTNET_ADD_GLOBAL_TOOLS_TO_PATH: false
      DOTNET_MULTILEVEL_LOOKUP: 0
      CSLA_BUILD_SLN: Source\csla.build.sln
      CSLA_TEST_SLN: Source\csla.test.sln

    steps:
    - uses: actions/checkout@v2

    # setup VSTest
    - name: Setup VSTest
      uses: darenm/Setup-VSTest@v1

    # setup MSBuild
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1

    # restore packages
    - name: Restore packages
      run: |
        msbuild ${{ env.CSLA_BUILD_SLN }} -t:Restore /p:Configuration=Release
        msbuild ${{ env.CSLA_TEST_SLN }} -t:Restore /p:Configuration=Release

    # build tests
    - name: Build tests
      run: |
        msbuild ${{ env.CSLA_TEST_SLN }} /p:Configuration=Release

    # run tests
    - name: Run tests
      run: |
        vstest.console.exe Source\Csla.netcore.test\bin\Release\netcoreapp2.1\csla.netcore.test.dll
        vstest.console.exe Source\Csla.test\bin\cs\Release\csla.test.dll
        vstest.console.exe Source\Csla.Validation.test\bin\Release\csla.validation.test.dll

    # build solution
    - name: Build Csla
      run: |
        msbuild ${{ env.CSLA_BUILD_SLN }} /p:Configuration=Release

    # TODO: store artifacts
